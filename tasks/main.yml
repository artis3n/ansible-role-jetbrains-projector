---
- name: Operating System
  ansible.builtin.debug:
    msg: "{{ ansible_distribution }} {{ ansible_distribution_major_version }} ({{ ansible_distribution_release }})"

- name: Validate user input
  ansible.builtin.include_tasks: lib/validate.yml
  loop: "{{ ides }}"
  loop_control:
    label: "{{ item.name }} - {{ item.config | default(item.name.split(' ')[0]) }}"

- name: Debian and related families
  when: ansible_distribution in debian_family
  ansible.builtin.include_tasks: debian.yml

- name: CentOS and related families
  when: ansible_distribution in centos_family
  ansible.builtin.include_tasks: centos.yml

- name: Ensure pip is up-to-date
  changed_when: false
  ansible.builtin.command:
    cmd: python3 -m pip install -U pip

- name: Install Projector
  ansible.builtin.pip:
    name: projector-installer
    executable: /usr/local/bin/pip3

- name: Set configuration idempotency folder
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.artis3n-projector/.idempotency"
    state: directory
    owner: "{{ ansible_user_id  }}"
    group: "{{ ansible_user_id  }}"
    mode: '0700'

- name: Store idempotency README
  ansible.builtin.copy:
    src: tasks/files/idempotency_readme.md
    dest: "{{ ansible_env.HOME }}/.artis3n-projector/README.md"
    owner: "{{ ansible_user_id  }}"
    group: "{{ ansible_user_id  }}"
    mode: '0644'

- name: Uninstall IDE
  ansible.builtin.include_tasks: lib/uninstall.yml
  when: item.state is defined and item.state == 'absent'
  loop: "{{ ides }}"
  loop_control:
    label: "{{ item.name }} - {{ item.config | default(item.name.split(' ')[0]) }}"

- name: Install IDE
  ansible.builtin.include_tasks: lib/install.yml
  when: item.state is not defined or item.state == 'present'
  loop: "{{ ides }}"
  loop_control:
    label: "{{ item.name }} - {{ item.config | default(item.name.split(' ')[0]) }}"
